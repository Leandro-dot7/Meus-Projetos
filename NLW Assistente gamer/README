ü§ñ NLW Agents - Assist√™ncia de Meta
Este projeto √© uma ferramenta web que funciona como um especialista assistente de meta para diversos jogos de eSports. Ele utiliza a API Gemini da Google para fornecer respostas concisas e atualizadas sobre estrat√©gias, builds e dicas para os jogos selecionados.

    Tecnologias e Funcionalidades
O projeto √© uma aplica√ß√£o single page baseada em HTML, CSS e JavaScript puro (Vanilla JS).

	
Backbone --	HTML5 & CSS3 --	Estrutura e estiliza√ß√£o, incluindo um design responsivo e efeitos de anima√ß√£o (@keyframes apper e pulse).

Intera√ß√£o -- JavaScript (Vanilla JS) -- L√≥gica da aplica√ß√£o, manipula√ß√£o do DOM e a chamada ass√≠ncrona para a API Gemini.

API -- Google Gemini -- Usado o modelo gemini-2.0-flash com a ferramenta de Google Search (tools: [{ google_search: {} }]) ativada para garantir respostas atualizadas sobre o meta atual dos jogos.
Formata√ß√£o -- Showdown.js -- Biblioteca externa (<script src="https://cdn.jsdelivr.net/npm/showdown@2.1.0/dist/showdown.min.js"></script>) utilizada para converter as respostas formatadas em Markdown da IA para HTML.


    Jogos Suportados
A interface permite que o usu√°rio selecione o contexto da pergunta, informando √† IA qual jogo ela deve considerar:

CS2
Dota2
League of Legends (LOL)
World of Warcraft (WOW)

    L√≥gica de Intelig√™ncia Artificial
A fun√ß√£o principal, perguntarAI, envia um prompt robusto ao modelo Gemini, que atua como um "especialista assistente de meta" para o jogo selecionado.

As Regras de Resposta da IA incluem:

Especialidade: Responder com base no conhecimento do jogo, estrat√©gias, builds e dicas.

Atualiza√ß√£o: Considerar a data atual e realizar pesquisas atualizadas sobre o patch vigente (via Google Search Tool).

Limita√ß√£o: Responder com 'N√£o sei' se a resposta for desconhecida, ou 'Essa pergunta n√£o est√° relacionada ao jogo' se o t√≥pico for irrelevante.

Formato: Ser direto, responder em Markdown e ter no m√°ximo 500 caracteres.

    Instala√ß√£o e Execu√ß√£o
Para rodar este projeto localmente, siga os passos abaixo:
Clone o Reposit√≥rio:
git clone https://www.youtube.com/watch?v=xtwls2XmJUI

Navegue at√© a pasta do projeto:
cd [nome-da-pasta-do-projeto]

    Execute:
Abra o arquivo index.html em seu navegador. Como n√£o h√° backend ou ambiente de servidor complexo, um duplo clique no arquivo √© suficiente.

    Requisito Chave: API Key
Para interagir com a API Gemini, voc√™ deve:

Obter uma API Key no Google AI Studio.
Inserir a chave no campo "Informe a API KEY do Gemini" da aplica√ß√£o.

A chave √© usada na fun√ß√£o perguntarAI para construir a URL de requisi√ß√£o (https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=[API_KEY]).

‚öôÔ∏è Configura√ß√£o (script.js)
O arquivo script.js gerencia toda a interatividade:

MarkdownToHTML(text): Converte o texto da resposta da IA de Markdown para HTML, usando a biblioteca Showdown.js. Inclui um fallback simples caso a biblioteca n√£o carregue.

PerguntarAI(...): Fun√ß√£o ass√≠ncrona que monta o prompt complexo, chama a API Gemini     via fetch, e retorna o texto da resposta.

SendForm(event): Lida com o envio do formul√°rio, valida os campos, desabilita o bot√£o e exibe a resposta da IA na √°rea #airesponse.

    Estiliza√ß√£o (style.css)
O design da aplica√ß√£o possui um tema dark (escuro) e eSports, com:

Fundo: Imagem (./assets/bg.jpg) com cor de fallback (#121214).

Fontes: Fonte 'Inter' importada do Google Fonts.

Gradiente Destaque: Uso de gradientes (#9572fc 0%, #43e7ad 50%, #e2d45c 100%) para elementos como a se√ß√£o principal e o bot√£o.

Anima√ß√£o de Carregamento: O bot√£o de envio exibe um efeito de pulsa√ß√£o (@keyframes pulse) quando a requisi√ß√£o est√° em andamento.